// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
    id                  String @id @default(cuid(2))
    username            String @unique
    password            String
    active              Boolean @default(true)
    serial              Int? @unique
    expiry              DateTime? @unique
    ratio               Float? @unique
    description         String?
    roles               roles[]
    creator             String?
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt
    profile             profiles?
    addresses           addresses[]
    goal                goals? @relation(fields: [goalId], references: [id], onDelete: SetNull)
    goalId              String?
}

model addresses {
    id                  String @id @default(cuid(2))
    userRef             users @relation(fields: [user], references: [id], onDelete: Cascade)
    user                String
    street              String
    city                String
    zip                 Int
    creator             String
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt
}

model profiles {
    id                  String @id @default(cuid(2))
    userRef             users @relation(fields: [user], references: [id], onDelete: Cascade)
    user                String @unique
    firstName           String
    lastName            String
    birthDate           DateTime
    creator             String
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt
}

model goals {
    id                  String @id @default(cuid(2))
    name                String @unique
    creator             String
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt

    users               users[]
}

model roles {
    id                  String @id @default(cuid(2))
    name                String @unique
    default             Boolean @default(false)
    creator             String
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt

    users               users[]
    permissions         permissions[]
}

model permissions {
    id                  String @id @default(cuid(2))
    roleRef             roles @relation(fields: [role], references: [name], onDelete: Cascade)
    role                String
    resource            String
    action              String
    attributes          String @default("*")
    creator             String
    created             DateTime @default(now())
    updated             DateTime @default(now()) @updatedAt

    @@unique([role, resource, action, attributes])
}

model litestream_lock {
    id                  Int @id

    @@map("_litestream_lock")
}

model litestream_seq {
    id                  Int @id @default(autoincrement())
    seq                 Int?

    @@map("_litestream_seq")
}
